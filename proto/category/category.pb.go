// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/category/category.proto

package categorypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Category struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}
func (*Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{0}
}

func (m *Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Category.Unmarshal(m, b)
}
func (m *Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Category.Marshal(b, m, deterministic)
}
func (m *Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Category.Merge(m, src)
}
func (m *Category) XXX_Size() int {
	return xxx_messageInfo_Category.Size(m)
}
func (m *Category) XXX_DiscardUnknown() {
	xxx_messageInfo_Category.DiscardUnknown(m)
}

var xxx_messageInfo_Category proto.InternalMessageInfo

func (m *Category) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateCategoryReq struct {
	Category             *Category `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateCategoryReq) Reset()         { *m = CreateCategoryReq{} }
func (m *CreateCategoryReq) String() string { return proto.CompactTextString(m) }
func (*CreateCategoryReq) ProtoMessage()    {}
func (*CreateCategoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{1}
}

func (m *CreateCategoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCategoryReq.Unmarshal(m, b)
}
func (m *CreateCategoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCategoryReq.Marshal(b, m, deterministic)
}
func (m *CreateCategoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCategoryReq.Merge(m, src)
}
func (m *CreateCategoryReq) XXX_Size() int {
	return xxx_messageInfo_CreateCategoryReq.Size(m)
}
func (m *CreateCategoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCategoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCategoryReq proto.InternalMessageInfo

func (m *CreateCategoryReq) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

type CreateCategoryRes struct {
	Category             *Category `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateCategoryRes) Reset()         { *m = CreateCategoryRes{} }
func (m *CreateCategoryRes) String() string { return proto.CompactTextString(m) }
func (*CreateCategoryRes) ProtoMessage()    {}
func (*CreateCategoryRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{2}
}

func (m *CreateCategoryRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCategoryRes.Unmarshal(m, b)
}
func (m *CreateCategoryRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCategoryRes.Marshal(b, m, deterministic)
}
func (m *CreateCategoryRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCategoryRes.Merge(m, src)
}
func (m *CreateCategoryRes) XXX_Size() int {
	return xxx_messageInfo_CreateCategoryRes.Size(m)
}
func (m *CreateCategoryRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCategoryRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCategoryRes proto.InternalMessageInfo

func (m *CreateCategoryRes) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

type ReadCategoryReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadCategoryReq) Reset()         { *m = ReadCategoryReq{} }
func (m *ReadCategoryReq) String() string { return proto.CompactTextString(m) }
func (*ReadCategoryReq) ProtoMessage()    {}
func (*ReadCategoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{3}
}

func (m *ReadCategoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadCategoryReq.Unmarshal(m, b)
}
func (m *ReadCategoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadCategoryReq.Marshal(b, m, deterministic)
}
func (m *ReadCategoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadCategoryReq.Merge(m, src)
}
func (m *ReadCategoryReq) XXX_Size() int {
	return xxx_messageInfo_ReadCategoryReq.Size(m)
}
func (m *ReadCategoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadCategoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadCategoryReq proto.InternalMessageInfo

func (m *ReadCategoryReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadCategoryRes struct {
	Category             *Category `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadCategoryRes) Reset()         { *m = ReadCategoryRes{} }
func (m *ReadCategoryRes) String() string { return proto.CompactTextString(m) }
func (*ReadCategoryRes) ProtoMessage()    {}
func (*ReadCategoryRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{4}
}

func (m *ReadCategoryRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadCategoryRes.Unmarshal(m, b)
}
func (m *ReadCategoryRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadCategoryRes.Marshal(b, m, deterministic)
}
func (m *ReadCategoryRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadCategoryRes.Merge(m, src)
}
func (m *ReadCategoryRes) XXX_Size() int {
	return xxx_messageInfo_ReadCategoryRes.Size(m)
}
func (m *ReadCategoryRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadCategoryRes.DiscardUnknown(m)
}

var xxx_messageInfo_ReadCategoryRes proto.InternalMessageInfo

func (m *ReadCategoryRes) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

type UpdateCategoryReq struct {
	Category             *Category `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateCategoryReq) Reset()         { *m = UpdateCategoryReq{} }
func (m *UpdateCategoryReq) String() string { return proto.CompactTextString(m) }
func (*UpdateCategoryReq) ProtoMessage()    {}
func (*UpdateCategoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{5}
}

func (m *UpdateCategoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCategoryReq.Unmarshal(m, b)
}
func (m *UpdateCategoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCategoryReq.Marshal(b, m, deterministic)
}
func (m *UpdateCategoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCategoryReq.Merge(m, src)
}
func (m *UpdateCategoryReq) XXX_Size() int {
	return xxx_messageInfo_UpdateCategoryReq.Size(m)
}
func (m *UpdateCategoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCategoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCategoryReq proto.InternalMessageInfo

func (m *UpdateCategoryReq) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

type UpdateCategoryRes struct {
	Category             *Category `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateCategoryRes) Reset()         { *m = UpdateCategoryRes{} }
func (m *UpdateCategoryRes) String() string { return proto.CompactTextString(m) }
func (*UpdateCategoryRes) ProtoMessage()    {}
func (*UpdateCategoryRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{6}
}

func (m *UpdateCategoryRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCategoryRes.Unmarshal(m, b)
}
func (m *UpdateCategoryRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCategoryRes.Marshal(b, m, deterministic)
}
func (m *UpdateCategoryRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCategoryRes.Merge(m, src)
}
func (m *UpdateCategoryRes) XXX_Size() int {
	return xxx_messageInfo_UpdateCategoryRes.Size(m)
}
func (m *UpdateCategoryRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCategoryRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCategoryRes proto.InternalMessageInfo

func (m *UpdateCategoryRes) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

type DeleteCategoryReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCategoryReq) Reset()         { *m = DeleteCategoryReq{} }
func (m *DeleteCategoryReq) String() string { return proto.CompactTextString(m) }
func (*DeleteCategoryReq) ProtoMessage()    {}
func (*DeleteCategoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{7}
}

func (m *DeleteCategoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCategoryReq.Unmarshal(m, b)
}
func (m *DeleteCategoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCategoryReq.Marshal(b, m, deterministic)
}
func (m *DeleteCategoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCategoryReq.Merge(m, src)
}
func (m *DeleteCategoryReq) XXX_Size() int {
	return xxx_messageInfo_DeleteCategoryReq.Size(m)
}
func (m *DeleteCategoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCategoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCategoryReq proto.InternalMessageInfo

func (m *DeleteCategoryReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteCategoryRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCategoryRes) Reset()         { *m = DeleteCategoryRes{} }
func (m *DeleteCategoryRes) String() string { return proto.CompactTextString(m) }
func (*DeleteCategoryRes) ProtoMessage()    {}
func (*DeleteCategoryRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{8}
}

func (m *DeleteCategoryRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCategoryRes.Unmarshal(m, b)
}
func (m *DeleteCategoryRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCategoryRes.Marshal(b, m, deterministic)
}
func (m *DeleteCategoryRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCategoryRes.Merge(m, src)
}
func (m *DeleteCategoryRes) XXX_Size() int {
	return xxx_messageInfo_DeleteCategoryRes.Size(m)
}
func (m *DeleteCategoryRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCategoryRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCategoryRes proto.InternalMessageInfo

func (m *DeleteCategoryRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListCategoriesReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCategoriesReq) Reset()         { *m = ListCategoriesReq{} }
func (m *ListCategoriesReq) String() string { return proto.CompactTextString(m) }
func (*ListCategoriesReq) ProtoMessage()    {}
func (*ListCategoriesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{9}
}

func (m *ListCategoriesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCategoriesReq.Unmarshal(m, b)
}
func (m *ListCategoriesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCategoriesReq.Marshal(b, m, deterministic)
}
func (m *ListCategoriesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCategoriesReq.Merge(m, src)
}
func (m *ListCategoriesReq) XXX_Size() int {
	return xxx_messageInfo_ListCategoriesReq.Size(m)
}
func (m *ListCategoriesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCategoriesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListCategoriesReq proto.InternalMessageInfo

type ListCategoriesRes struct {
	Category             *Category `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListCategoriesRes) Reset()         { *m = ListCategoriesRes{} }
func (m *ListCategoriesRes) String() string { return proto.CompactTextString(m) }
func (*ListCategoriesRes) ProtoMessage()    {}
func (*ListCategoriesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_32a5182aa9660324, []int{10}
}

func (m *ListCategoriesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCategoriesRes.Unmarshal(m, b)
}
func (m *ListCategoriesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCategoriesRes.Marshal(b, m, deterministic)
}
func (m *ListCategoriesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCategoriesRes.Merge(m, src)
}
func (m *ListCategoriesRes) XXX_Size() int {
	return xxx_messageInfo_ListCategoriesRes.Size(m)
}
func (m *ListCategoriesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCategoriesRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListCategoriesRes proto.InternalMessageInfo

func (m *ListCategoriesRes) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

func init() {
	proto.RegisterType((*Category)(nil), "category.Category")
	proto.RegisterType((*CreateCategoryReq)(nil), "category.CreateCategoryReq")
	proto.RegisterType((*CreateCategoryRes)(nil), "category.CreateCategoryRes")
	proto.RegisterType((*ReadCategoryReq)(nil), "category.ReadCategoryReq")
	proto.RegisterType((*ReadCategoryRes)(nil), "category.ReadCategoryRes")
	proto.RegisterType((*UpdateCategoryReq)(nil), "category.UpdateCategoryReq")
	proto.RegisterType((*UpdateCategoryRes)(nil), "category.UpdateCategoryRes")
	proto.RegisterType((*DeleteCategoryReq)(nil), "category.DeleteCategoryReq")
	proto.RegisterType((*DeleteCategoryRes)(nil), "category.DeleteCategoryRes")
	proto.RegisterType((*ListCategoriesReq)(nil), "category.ListCategoriesReq")
	proto.RegisterType((*ListCategoriesRes)(nil), "category.ListCategoriesRes")
}

func init() { proto.RegisterFile("proto/category/category.proto", fileDescriptor_32a5182aa9660324) }

var fileDescriptor_32a5182aa9660324 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x41, 0x4f, 0xb3, 0x40,
	0x10, 0x0d, 0x7c, 0x5f, 0x14, 0xc7, 0x86, 0x86, 0xf1, 0x82, 0x18, 0x13, 0xc5, 0x8b, 0x17, 0xd1,
	0xd4, 0x5f, 0xa0, 0xf4, 0x64, 0x7a, 0xc2, 0x78, 0xf1, 0x46, 0x61, 0x62, 0x36, 0x51, 0xa1, 0x0c,
	0x9a, 0xf8, 0x13, 0xfc, 0xd7, 0xa6, 0x9b, 0x2e, 0xdd, 0x5d, 0x94, 0x04, 0xbd, 0xcd, 0xce, 0x7b,
	0xfb, 0xf6, 0x0d, 0x6f, 0x02, 0x1c, 0xd7, 0x4d, 0xd5, 0x56, 0x97, 0x45, 0xde, 0xd2, 0x53, 0xd5,
	0x7c, 0x74, 0x45, 0x22, 0xfb, 0xe8, 0xa9, 0x73, 0x9c, 0x80, 0x97, 0x6e, 0x6a, 0xf4, 0xc1, 0x15,
	0x65, 0xe8, 0x9c, 0x38, 0xe7, 0x7b, 0x99, 0x2b, 0x4a, 0x44, 0xf8, 0xff, 0x9a, 0xbf, 0x50, 0xe8,
	0xca, 0x8e, 0xac, 0xe3, 0x14, 0x82, 0xb4, 0xa1, 0xbc, 0x25, 0x75, 0x2b, 0xa3, 0x15, 0x26, 0xd0,
	0x09, 0xca, 0xeb, 0xfb, 0x33, 0x4c, 0xba, 0x17, 0x3b, 0xe2, 0xf6, 0xd1, 0x6f, 0x44, 0x78, 0xb4,
	0xc8, 0x29, 0x4c, 0x33, 0xca, 0x4b, 0xdd, 0x87, 0x35, 0x40, 0x7c, 0x63, 0x53, 0xf8, 0x37, 0x56,
	0x1f, 0xea, 0xf2, 0xef, 0xf3, 0xda, 0x22, 0xe3, 0x9d, 0x9c, 0x41, 0x30, 0xa7, 0x67, 0x32, 0x9d,
	0xd8, 0x13, 0x5f, 0xf4, 0x49, 0x8c, 0x21, 0xec, 0xf2, 0x5b, 0x51, 0x10, 0xb3, 0x64, 0x7a, 0x99,
	0x3a, 0xc6, 0x07, 0x10, 0x2c, 0x04, 0xb7, 0x1b, 0xb2, 0x20, 0xce, 0x68, 0xb5, 0x76, 0x6b, 0x37,
	0x47, 0xbb, 0x9d, 0x7d, 0xfe, 0x83, 0xa9, 0x6a, 0xdf, 0x53, 0xf3, 0x2e, 0x0a, 0xc2, 0x3b, 0xf0,
	0xcd, 0xd8, 0xf1, 0x48, 0xd3, 0xb0, 0xb7, 0x2a, 0x1a, 0x00, 0x19, 0xe7, 0x30, 0xd1, 0xa3, 0xc5,
	0xc3, 0x2d, 0xd9, 0xda, 0x8a, 0xe8, 0x47, 0x88, 0xd7, 0x8e, 0xcc, 0x60, 0x74, 0x47, 0xbd, 0xdc,
	0xa3, 0x01, 0x50, 0x6a, 0x99, 0x9f, 0x5e, 0xd7, 0xea, 0x25, 0x17, 0x0d, 0x80, 0x8c, 0x0b, 0xf0,
	0xcd, 0x08, 0x74, 0xad, 0x5e, 0x62, 0xd1, 0x00, 0xc8, 0x57, 0xce, 0xed, 0xe4, 0x11, 0x14, 0x5e,
	0x2f, 0x97, 0x3b, 0xf2, 0x17, 0x70, 0xfd, 0x15, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xc1, 0x65, 0x98,
	0x23, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CategoryServiceClient is the client API for CategoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CategoryServiceClient interface {
	CreateCategory(ctx context.Context, in *CreateCategoryReq, opts ...grpc.CallOption) (*CreateCategoryRes, error)
	ReadCategory(ctx context.Context, in *ReadCategoryReq, opts ...grpc.CallOption) (*ReadCategoryRes, error)
	UpdateCategory(ctx context.Context, in *UpdateCategoryReq, opts ...grpc.CallOption) (*UpdateCategoryRes, error)
	DeleteCategory(ctx context.Context, in *DeleteCategoryReq, opts ...grpc.CallOption) (*DeleteCategoryRes, error)
	ListCategories(ctx context.Context, in *ListCategoriesReq, opts ...grpc.CallOption) (CategoryService_ListCategoriesClient, error)
}

type categoryServiceClient struct {
	cc *grpc.ClientConn
}

func NewCategoryServiceClient(cc *grpc.ClientConn) CategoryServiceClient {
	return &categoryServiceClient{cc}
}

func (c *categoryServiceClient) CreateCategory(ctx context.Context, in *CreateCategoryReq, opts ...grpc.CallOption) (*CreateCategoryRes, error) {
	out := new(CreateCategoryRes)
	err := c.cc.Invoke(ctx, "/category.CategoryService/CreateCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) ReadCategory(ctx context.Context, in *ReadCategoryReq, opts ...grpc.CallOption) (*ReadCategoryRes, error) {
	out := new(ReadCategoryRes)
	err := c.cc.Invoke(ctx, "/category.CategoryService/ReadCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) UpdateCategory(ctx context.Context, in *UpdateCategoryReq, opts ...grpc.CallOption) (*UpdateCategoryRes, error) {
	out := new(UpdateCategoryRes)
	err := c.cc.Invoke(ctx, "/category.CategoryService/UpdateCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) DeleteCategory(ctx context.Context, in *DeleteCategoryReq, opts ...grpc.CallOption) (*DeleteCategoryRes, error) {
	out := new(DeleteCategoryRes)
	err := c.cc.Invoke(ctx, "/category.CategoryService/DeleteCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) ListCategories(ctx context.Context, in *ListCategoriesReq, opts ...grpc.CallOption) (CategoryService_ListCategoriesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CategoryService_serviceDesc.Streams[0], "/category.CategoryService/ListCategories", opts...)
	if err != nil {
		return nil, err
	}
	x := &categoryServiceListCategoriesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CategoryService_ListCategoriesClient interface {
	Recv() (*ListCategoriesRes, error)
	grpc.ClientStream
}

type categoryServiceListCategoriesClient struct {
	grpc.ClientStream
}

func (x *categoryServiceListCategoriesClient) Recv() (*ListCategoriesRes, error) {
	m := new(ListCategoriesRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CategoryServiceServer is the server API for CategoryService service.
type CategoryServiceServer interface {
	CreateCategory(context.Context, *CreateCategoryReq) (*CreateCategoryRes, error)
	ReadCategory(context.Context, *ReadCategoryReq) (*ReadCategoryRes, error)
	UpdateCategory(context.Context, *UpdateCategoryReq) (*UpdateCategoryRes, error)
	DeleteCategory(context.Context, *DeleteCategoryReq) (*DeleteCategoryRes, error)
	ListCategories(*ListCategoriesReq, CategoryService_ListCategoriesServer) error
}

// UnimplementedCategoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCategoryServiceServer struct {
}

func (*UnimplementedCategoryServiceServer) CreateCategory(ctx context.Context, req *CreateCategoryReq) (*CreateCategoryRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCategory not implemented")
}
func (*UnimplementedCategoryServiceServer) ReadCategory(ctx context.Context, req *ReadCategoryReq) (*ReadCategoryRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadCategory not implemented")
}
func (*UnimplementedCategoryServiceServer) UpdateCategory(ctx context.Context, req *UpdateCategoryReq) (*UpdateCategoryRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCategory not implemented")
}
func (*UnimplementedCategoryServiceServer) DeleteCategory(ctx context.Context, req *DeleteCategoryReq) (*DeleteCategoryRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCategory not implemented")
}
func (*UnimplementedCategoryServiceServer) ListCategories(req *ListCategoriesReq, srv CategoryService_ListCategoriesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCategories not implemented")
}

func RegisterCategoryServiceServer(s *grpc.Server, srv CategoryServiceServer) {
	s.RegisterService(&_CategoryService_serviceDesc, srv)
}

func _CategoryService_CreateCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCategoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).CreateCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.CategoryService/CreateCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).CreateCategory(ctx, req.(*CreateCategoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_ReadCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadCategoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).ReadCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.CategoryService/ReadCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).ReadCategory(ctx, req.(*ReadCategoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_UpdateCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCategoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).UpdateCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.CategoryService/UpdateCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).UpdateCategory(ctx, req.(*UpdateCategoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_DeleteCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCategoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).DeleteCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.CategoryService/DeleteCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).DeleteCategory(ctx, req.(*DeleteCategoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_ListCategories_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListCategoriesReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CategoryServiceServer).ListCategories(m, &categoryServiceListCategoriesServer{stream})
}

type CategoryService_ListCategoriesServer interface {
	Send(*ListCategoriesRes) error
	grpc.ServerStream
}

type categoryServiceListCategoriesServer struct {
	grpc.ServerStream
}

func (x *categoryServiceListCategoriesServer) Send(m *ListCategoriesRes) error {
	return x.ServerStream.SendMsg(m)
}

var _CategoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "category.CategoryService",
	HandlerType: (*CategoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCategory",
			Handler:    _CategoryService_CreateCategory_Handler,
		},
		{
			MethodName: "ReadCategory",
			Handler:    _CategoryService_ReadCategory_Handler,
		},
		{
			MethodName: "UpdateCategory",
			Handler:    _CategoryService_UpdateCategory_Handler,
		},
		{
			MethodName: "DeleteCategory",
			Handler:    _CategoryService_DeleteCategory_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListCategories",
			Handler:       _CategoryService_ListCategories_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/category/category.proto",
}
