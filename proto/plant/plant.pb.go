// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/plant/plant.proto

package plantpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Plant struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CategoryId           string   `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Desc                 string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Plant) Reset()         { *m = Plant{} }
func (m *Plant) String() string { return proto.CompactTextString(m) }
func (*Plant) ProtoMessage()    {}
func (*Plant) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{0}
}

func (m *Plant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plant.Unmarshal(m, b)
}
func (m *Plant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plant.Marshal(b, m, deterministic)
}
func (m *Plant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plant.Merge(m, src)
}
func (m *Plant) XXX_Size() int {
	return xxx_messageInfo_Plant.Size(m)
}
func (m *Plant) XXX_DiscardUnknown() {
	xxx_messageInfo_Plant.DiscardUnknown(m)
}

var xxx_messageInfo_Plant proto.InternalMessageInfo

func (m *Plant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Plant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Plant) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *Plant) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type CreatePlantReq struct {
	Plant                *Plant   `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePlantReq) Reset()         { *m = CreatePlantReq{} }
func (m *CreatePlantReq) String() string { return proto.CompactTextString(m) }
func (*CreatePlantReq) ProtoMessage()    {}
func (*CreatePlantReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{1}
}

func (m *CreatePlantReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePlantReq.Unmarshal(m, b)
}
func (m *CreatePlantReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePlantReq.Marshal(b, m, deterministic)
}
func (m *CreatePlantReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePlantReq.Merge(m, src)
}
func (m *CreatePlantReq) XXX_Size() int {
	return xxx_messageInfo_CreatePlantReq.Size(m)
}
func (m *CreatePlantReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePlantReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePlantReq proto.InternalMessageInfo

func (m *CreatePlantReq) GetPlant() *Plant {
	if m != nil {
		return m.Plant
	}
	return nil
}

type CreatePlantRes struct {
	Plant                *Plant   `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePlantRes) Reset()         { *m = CreatePlantRes{} }
func (m *CreatePlantRes) String() string { return proto.CompactTextString(m) }
func (*CreatePlantRes) ProtoMessage()    {}
func (*CreatePlantRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{2}
}

func (m *CreatePlantRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePlantRes.Unmarshal(m, b)
}
func (m *CreatePlantRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePlantRes.Marshal(b, m, deterministic)
}
func (m *CreatePlantRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePlantRes.Merge(m, src)
}
func (m *CreatePlantRes) XXX_Size() int {
	return xxx_messageInfo_CreatePlantRes.Size(m)
}
func (m *CreatePlantRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePlantRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePlantRes proto.InternalMessageInfo

func (m *CreatePlantRes) GetPlant() *Plant {
	if m != nil {
		return m.Plant
	}
	return nil
}

type ReadPlantReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPlantReq) Reset()         { *m = ReadPlantReq{} }
func (m *ReadPlantReq) String() string { return proto.CompactTextString(m) }
func (*ReadPlantReq) ProtoMessage()    {}
func (*ReadPlantReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{3}
}

func (m *ReadPlantReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPlantReq.Unmarshal(m, b)
}
func (m *ReadPlantReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPlantReq.Marshal(b, m, deterministic)
}
func (m *ReadPlantReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPlantReq.Merge(m, src)
}
func (m *ReadPlantReq) XXX_Size() int {
	return xxx_messageInfo_ReadPlantReq.Size(m)
}
func (m *ReadPlantReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPlantReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPlantReq proto.InternalMessageInfo

func (m *ReadPlantReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadPlantRes struct {
	Plant                *Plant   `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPlantRes) Reset()         { *m = ReadPlantRes{} }
func (m *ReadPlantRes) String() string { return proto.CompactTextString(m) }
func (*ReadPlantRes) ProtoMessage()    {}
func (*ReadPlantRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{4}
}

func (m *ReadPlantRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPlantRes.Unmarshal(m, b)
}
func (m *ReadPlantRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPlantRes.Marshal(b, m, deterministic)
}
func (m *ReadPlantRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPlantRes.Merge(m, src)
}
func (m *ReadPlantRes) XXX_Size() int {
	return xxx_messageInfo_ReadPlantRes.Size(m)
}
func (m *ReadPlantRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPlantRes.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPlantRes proto.InternalMessageInfo

func (m *ReadPlantRes) GetPlant() *Plant {
	if m != nil {
		return m.Plant
	}
	return nil
}

type UpdatePlantReq struct {
	Plant                *Plant   `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePlantReq) Reset()         { *m = UpdatePlantReq{} }
func (m *UpdatePlantReq) String() string { return proto.CompactTextString(m) }
func (*UpdatePlantReq) ProtoMessage()    {}
func (*UpdatePlantReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{5}
}

func (m *UpdatePlantReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePlantReq.Unmarshal(m, b)
}
func (m *UpdatePlantReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePlantReq.Marshal(b, m, deterministic)
}
func (m *UpdatePlantReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePlantReq.Merge(m, src)
}
func (m *UpdatePlantReq) XXX_Size() int {
	return xxx_messageInfo_UpdatePlantReq.Size(m)
}
func (m *UpdatePlantReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePlantReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePlantReq proto.InternalMessageInfo

func (m *UpdatePlantReq) GetPlant() *Plant {
	if m != nil {
		return m.Plant
	}
	return nil
}

type UpdatePlantRes struct {
	Plant                *Plant   `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePlantRes) Reset()         { *m = UpdatePlantRes{} }
func (m *UpdatePlantRes) String() string { return proto.CompactTextString(m) }
func (*UpdatePlantRes) ProtoMessage()    {}
func (*UpdatePlantRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{6}
}

func (m *UpdatePlantRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePlantRes.Unmarshal(m, b)
}
func (m *UpdatePlantRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePlantRes.Marshal(b, m, deterministic)
}
func (m *UpdatePlantRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePlantRes.Merge(m, src)
}
func (m *UpdatePlantRes) XXX_Size() int {
	return xxx_messageInfo_UpdatePlantRes.Size(m)
}
func (m *UpdatePlantRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePlantRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePlantRes proto.InternalMessageInfo

func (m *UpdatePlantRes) GetPlant() *Plant {
	if m != nil {
		return m.Plant
	}
	return nil
}

type DeletePlantReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePlantReq) Reset()         { *m = DeletePlantReq{} }
func (m *DeletePlantReq) String() string { return proto.CompactTextString(m) }
func (*DeletePlantReq) ProtoMessage()    {}
func (*DeletePlantReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{7}
}

func (m *DeletePlantReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePlantReq.Unmarshal(m, b)
}
func (m *DeletePlantReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePlantReq.Marshal(b, m, deterministic)
}
func (m *DeletePlantReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePlantReq.Merge(m, src)
}
func (m *DeletePlantReq) XXX_Size() int {
	return xxx_messageInfo_DeletePlantReq.Size(m)
}
func (m *DeletePlantReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePlantReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePlantReq proto.InternalMessageInfo

func (m *DeletePlantReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeletePlantRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePlantRes) Reset()         { *m = DeletePlantRes{} }
func (m *DeletePlantRes) String() string { return proto.CompactTextString(m) }
func (*DeletePlantRes) ProtoMessage()    {}
func (*DeletePlantRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{8}
}

func (m *DeletePlantRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePlantRes.Unmarshal(m, b)
}
func (m *DeletePlantRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePlantRes.Marshal(b, m, deterministic)
}
func (m *DeletePlantRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePlantRes.Merge(m, src)
}
func (m *DeletePlantRes) XXX_Size() int {
	return xxx_messageInfo_DeletePlantRes.Size(m)
}
func (m *DeletePlantRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePlantRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePlantRes proto.InternalMessageInfo

func (m *DeletePlantRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListPlantsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPlantsReq) Reset()         { *m = ListPlantsReq{} }
func (m *ListPlantsReq) String() string { return proto.CompactTextString(m) }
func (*ListPlantsReq) ProtoMessage()    {}
func (*ListPlantsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{9}
}

func (m *ListPlantsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPlantsReq.Unmarshal(m, b)
}
func (m *ListPlantsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPlantsReq.Marshal(b, m, deterministic)
}
func (m *ListPlantsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPlantsReq.Merge(m, src)
}
func (m *ListPlantsReq) XXX_Size() int {
	return xxx_messageInfo_ListPlantsReq.Size(m)
}
func (m *ListPlantsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPlantsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListPlantsReq proto.InternalMessageInfo

type ListPlantsRes struct {
	Plant                *Plant   `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPlantsRes) Reset()         { *m = ListPlantsRes{} }
func (m *ListPlantsRes) String() string { return proto.CompactTextString(m) }
func (*ListPlantsRes) ProtoMessage()    {}
func (*ListPlantsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6face8932a2e1d36, []int{10}
}

func (m *ListPlantsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPlantsRes.Unmarshal(m, b)
}
func (m *ListPlantsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPlantsRes.Marshal(b, m, deterministic)
}
func (m *ListPlantsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPlantsRes.Merge(m, src)
}
func (m *ListPlantsRes) XXX_Size() int {
	return xxx_messageInfo_ListPlantsRes.Size(m)
}
func (m *ListPlantsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPlantsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListPlantsRes proto.InternalMessageInfo

func (m *ListPlantsRes) GetPlant() *Plant {
	if m != nil {
		return m.Plant
	}
	return nil
}

func init() {
	proto.RegisterType((*Plant)(nil), "plant.Plant")
	proto.RegisterType((*CreatePlantReq)(nil), "plant.CreatePlantReq")
	proto.RegisterType((*CreatePlantRes)(nil), "plant.CreatePlantRes")
	proto.RegisterType((*ReadPlantReq)(nil), "plant.ReadPlantReq")
	proto.RegisterType((*ReadPlantRes)(nil), "plant.ReadPlantRes")
	proto.RegisterType((*UpdatePlantReq)(nil), "plant.UpdatePlantReq")
	proto.RegisterType((*UpdatePlantRes)(nil), "plant.UpdatePlantRes")
	proto.RegisterType((*DeletePlantReq)(nil), "plant.DeletePlantReq")
	proto.RegisterType((*DeletePlantRes)(nil), "plant.DeletePlantRes")
	proto.RegisterType((*ListPlantsReq)(nil), "plant.ListPlantsReq")
	proto.RegisterType((*ListPlantsRes)(nil), "plant.ListPlantsRes")
}

func init() { proto.RegisterFile("proto/plant/plant.proto", fileDescriptor_6face8932a2e1d36) }

var fileDescriptor_6face8932a2e1d36 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0x69, 0xfe, 0xed, 0xbf, 0x76, 0x5a, 0x23, 0x8c, 0x8a, 0x21, 0x07, 0x2d, 0x7b, 0x12,
	0x0f, 0x55, 0x52, 0xbd, 0xe8, 0x4d, 0xbd, 0x08, 0x1e, 0x24, 0xe2, 0xc5, 0x8b, 0xa6, 0xd9, 0x41,
	0x02, 0xb5, 0x49, 0x33, 0x51, 0xf0, 0x9b, 0xf9, 0xf1, 0x24, 0x93, 0x34, 0x66, 0x43, 0x0e, 0xc1,
	0x4b, 0xd8, 0xfd, 0xcd, 0x3c, 0xde, 0xec, 0x3c, 0x02, 0x07, 0x49, 0x1a, 0x67, 0xf1, 0x69, 0xb2,
	0x0c, 0x56, 0x59, 0xf1, 0x9d, 0x09, 0xc1, 0x81, 0x5c, 0xd4, 0x2b, 0x0c, 0x1e, 0xf2, 0x03, 0xda,
	0x60, 0x45, 0xda, 0xe9, 0x4d, 0x7b, 0xc7, 0x23, 0xdf, 0x8a, 0x34, 0x22, 0xf4, 0x57, 0xc1, 0x3b,
	0x39, 0x96, 0x10, 0x39, 0xe3, 0x11, 0x8c, 0xc3, 0x20, 0xa3, 0xb7, 0x38, 0xfd, 0x7a, 0x89, 0xb4,
	0xf3, 0x4f, 0x4a, 0xb0, 0x41, 0x77, 0x22, 0xd2, 0xc4, 0xa1, 0xd3, 0x2f, 0x44, 0xf9, 0x59, 0x9d,
	0x83, 0x7d, 0x93, 0x52, 0x90, 0x91, 0xf8, 0xf8, 0xb4, 0x46, 0x05, 0x85, 0xb9, 0xb8, 0x8d, 0xbd,
	0xc9, 0xac, 0x98, 0xab, 0xa8, 0x97, 0x73, 0x35, 0x55, 0xdc, 0x49, 0x75, 0x08, 0x13, 0x9f, 0x02,
	0x5d, 0x39, 0x35, 0x1e, 0xa5, 0x3c, 0xa3, 0xce, 0x5d, 0x27, 0x79, 0x4a, 0xf4, 0x1f, 0xe6, 0x37,
	0x54, 0xdd, 0xbc, 0xa6, 0x60, 0xdf, 0xd2, 0x92, 0x6a, 0x5e, 0xcd, 0x17, 0x9c, 0x34, 0x3a, 0x18,
	0x1d, 0x18, 0xf2, 0x47, 0x18, 0x12, 0xb3, 0xb4, 0x6d, 0xf9, 0x9b, 0xab, 0xda, 0x81, 0xed, 0xfb,
	0x88, 0x33, 0xe9, 0x64, 0x9f, 0xd6, 0x6a, 0x6e, 0x82, 0x4e, 0x33, 0x79, 0xdf, 0x16, 0x4c, 0x04,
	0x3c, 0x52, 0xfa, 0x19, 0x85, 0x84, 0x57, 0x30, 0xae, 0x45, 0x83, 0xfb, 0xa5, 0xc8, 0x0c, 0xd9,
	0x6d, 0xc5, 0x8c, 0x17, 0x30, 0xaa, 0x12, 0xc0, 0xdd, 0xb2, 0xa7, 0x9e, 0x99, 0xdb, 0x02, 0x39,
	0xf7, 0xac, 0xad, 0xb3, 0xf2, 0x34, 0x83, 0x71, 0x5b, 0xb1, 0x88, 0x6b, 0x3b, 0xab, 0xc4, 0xe6,
	0xa6, 0xdd, 0x56, 0xcc, 0x78, 0x09, 0xf0, 0xbb, 0x33, 0xdc, 0x2b, 0x9b, 0x8c, 0xbd, 0xba, 0x6d,
	0x94, 0xcf, 0x7a, 0xd7, 0xa3, 0xe7, 0xa1, 0x14, 0x92, 0xc5, 0xe2, 0xbf, 0xfc, 0x75, 0xf3, 0x9f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x00, 0x23, 0x42, 0x90, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlantServiceClient is the client API for PlantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlantServiceClient interface {
	CreatePlant(ctx context.Context, in *CreatePlantReq, opts ...grpc.CallOption) (*CreatePlantRes, error)
	ReadPlant(ctx context.Context, in *ReadPlantReq, opts ...grpc.CallOption) (*ReadPlantRes, error)
	UpdatePlant(ctx context.Context, in *UpdatePlantReq, opts ...grpc.CallOption) (*UpdatePlantRes, error)
	DeletePlant(ctx context.Context, in *DeletePlantReq, opts ...grpc.CallOption) (*DeletePlantRes, error)
	ListPlants(ctx context.Context, in *ListPlantsReq, opts ...grpc.CallOption) (PlantService_ListPlantsClient, error)
}

type plantServiceClient struct {
	cc *grpc.ClientConn
}

func NewPlantServiceClient(cc *grpc.ClientConn) PlantServiceClient {
	return &plantServiceClient{cc}
}

func (c *plantServiceClient) CreatePlant(ctx context.Context, in *CreatePlantReq, opts ...grpc.CallOption) (*CreatePlantRes, error) {
	out := new(CreatePlantRes)
	err := c.cc.Invoke(ctx, "/plant.PlantService/CreatePlant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plantServiceClient) ReadPlant(ctx context.Context, in *ReadPlantReq, opts ...grpc.CallOption) (*ReadPlantRes, error) {
	out := new(ReadPlantRes)
	err := c.cc.Invoke(ctx, "/plant.PlantService/ReadPlant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plantServiceClient) UpdatePlant(ctx context.Context, in *UpdatePlantReq, opts ...grpc.CallOption) (*UpdatePlantRes, error) {
	out := new(UpdatePlantRes)
	err := c.cc.Invoke(ctx, "/plant.PlantService/UpdatePlant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plantServiceClient) DeletePlant(ctx context.Context, in *DeletePlantReq, opts ...grpc.CallOption) (*DeletePlantRes, error) {
	out := new(DeletePlantRes)
	err := c.cc.Invoke(ctx, "/plant.PlantService/DeletePlant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plantServiceClient) ListPlants(ctx context.Context, in *ListPlantsReq, opts ...grpc.CallOption) (PlantService_ListPlantsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PlantService_serviceDesc.Streams[0], "/plant.PlantService/ListPlants", opts...)
	if err != nil {
		return nil, err
	}
	x := &plantServiceListPlantsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PlantService_ListPlantsClient interface {
	Recv() (*ListPlantsRes, error)
	grpc.ClientStream
}

type plantServiceListPlantsClient struct {
	grpc.ClientStream
}

func (x *plantServiceListPlantsClient) Recv() (*ListPlantsRes, error) {
	m := new(ListPlantsRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PlantServiceServer is the server API for PlantService service.
type PlantServiceServer interface {
	CreatePlant(context.Context, *CreatePlantReq) (*CreatePlantRes, error)
	ReadPlant(context.Context, *ReadPlantReq) (*ReadPlantRes, error)
	UpdatePlant(context.Context, *UpdatePlantReq) (*UpdatePlantRes, error)
	DeletePlant(context.Context, *DeletePlantReq) (*DeletePlantRes, error)
	ListPlants(*ListPlantsReq, PlantService_ListPlantsServer) error
}

// UnimplementedPlantServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPlantServiceServer struct {
}

func (*UnimplementedPlantServiceServer) CreatePlant(ctx context.Context, req *CreatePlantReq) (*CreatePlantRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePlant not implemented")
}
func (*UnimplementedPlantServiceServer) ReadPlant(ctx context.Context, req *ReadPlantReq) (*ReadPlantRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadPlant not implemented")
}
func (*UnimplementedPlantServiceServer) UpdatePlant(ctx context.Context, req *UpdatePlantReq) (*UpdatePlantRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePlant not implemented")
}
func (*UnimplementedPlantServiceServer) DeletePlant(ctx context.Context, req *DeletePlantReq) (*DeletePlantRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePlant not implemented")
}
func (*UnimplementedPlantServiceServer) ListPlants(req *ListPlantsReq, srv PlantService_ListPlantsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListPlants not implemented")
}

func RegisterPlantServiceServer(s *grpc.Server, srv PlantServiceServer) {
	s.RegisterService(&_PlantService_serviceDesc, srv)
}

func _PlantService_CreatePlant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePlantReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlantServiceServer).CreatePlant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plant.PlantService/CreatePlant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlantServiceServer).CreatePlant(ctx, req.(*CreatePlantReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlantService_ReadPlant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadPlantReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlantServiceServer).ReadPlant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plant.PlantService/ReadPlant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlantServiceServer).ReadPlant(ctx, req.(*ReadPlantReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlantService_UpdatePlant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePlantReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlantServiceServer).UpdatePlant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plant.PlantService/UpdatePlant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlantServiceServer).UpdatePlant(ctx, req.(*UpdatePlantReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlantService_DeletePlant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePlantReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlantServiceServer).DeletePlant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plant.PlantService/DeletePlant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlantServiceServer).DeletePlant(ctx, req.(*DeletePlantReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlantService_ListPlants_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListPlantsReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PlantServiceServer).ListPlants(m, &plantServiceListPlantsServer{stream})
}

type PlantService_ListPlantsServer interface {
	Send(*ListPlantsRes) error
	grpc.ServerStream
}

type plantServiceListPlantsServer struct {
	grpc.ServerStream
}

func (x *plantServiceListPlantsServer) Send(m *ListPlantsRes) error {
	return x.ServerStream.SendMsg(m)
}

var _PlantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plant.PlantService",
	HandlerType: (*PlantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePlant",
			Handler:    _PlantService_CreatePlant_Handler,
		},
		{
			MethodName: "ReadPlant",
			Handler:    _PlantService_ReadPlant_Handler,
		},
		{
			MethodName: "UpdatePlant",
			Handler:    _PlantService_UpdatePlant_Handler,
		},
		{
			MethodName: "DeletePlant",
			Handler:    _PlantService_DeletePlant_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPlants",
			Handler:       _PlantService_ListPlants_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/plant/plant.proto",
}
